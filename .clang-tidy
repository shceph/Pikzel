Checks: >
  *, misc-*, -fuchsia-*,-zircon-*,-abseil-*,-llvm-*,-llvmlibc-*,-altera-*,

  # -*,
  # bugprone-*,
  # modernize-*,
  # performance-*,
  # portability-*,
  # readability-*,
  # cppcoreguidelines-*,
  # hicpp-*,
  # cert-*,
  # misc-*,
  # google-*,

  -google-readability-todo,
  -cppcoreguidelines-pro-type-union-access,
  -hicpp-signed-bitwise,
  -readability-magic-numbers,
  -cppcoreguidelines-avoid-magic-numbers,

  # Have structs with public members

  -misc-non-private-member-variables-in-classes,

  # ImGui requires me to break these

  -hicpp-vararg,
  -cppcoreguidelines-pro-type-vararg,

# Turn all the warnings from the checks above into errors.
# WarningsAsErrors: "*"

CheckOptions:
  - { key: cppcoreguidelines-pro-bounds-pointer-arithmetic.Enabled,   value: false }
  - { key: readability-identifier-naming.NamespaceCase,          value: CamelCase  }
  - { key: readability-identifier-naming.ClassCase,              value: CamelCase  }
  - { key: readability-identifier-naming.StructCase,             value: CamelCase  }
  - { key: readability-identifier-naming.TemplateParameterCase,  value: CamelCase  }
  - { key: readability-identifier-naming.FunctionCase,           value: CamelCase  }
  - { key: readability-identifier-naming.VariableCase,           value: lower_case }
  # - { key: readability-identifier-naming.PrivateMemberSuffix,    value: _          }
  # - { key: readability-identifier-naming.ProtectedMemberSuffix,  value: _          }
  - { key: readability-identifier-naming.PrivateMemberCase,      value: CamelCase  }
  - { key: readability-identifier-naming.PrivateMemberPrefix,    value: m          }
  - { key: readability-identifier-naming.ProtectedMemberCase,    value: CamelCase  }
  - { key: readability-identifier-naming.ProtectedMemberPrefix,  value: m          }
  - { key: readability-identifier-naming.MacroDefinitionCase,    value: UPPER_CASE }
  - { key: readability-identifier-naming.EnumConstantCase,         value: CamelCase }
  - { key: readability-identifier-naming.EnumConstantPrefix,       value: k         }
  - { key: readability-identifier-naming.ConstexprVariableCase,    value: CamelCase }
  - { key: readability-identifier-naming.ConstexprVariablePrefix,  value: k         }
  - { key: readability-identifier-naming.GlobalConstantCase,       value: CamelCase }
  - { key: readability-identifier-naming.GlobalConstantPrefix,     value: k         }
  - { key: readability-identifier-naming.MemberConstantCase,       value: CamelCase }
  - { key: readability-identifier-naming.MemberConstantPrefix,     value: k         }
  - { key: readability-identifier-naming.StaticConstantCase,       value: CamelCase }
  - { key: readability-identifier-naming.StaticConstantPrefix,     value: k         }
  - { key: readability-identifier-naming.ClassMemberPrefix,   value: s  }
  - { key: readability-identifier-naming.ClassMemberCase,     value: CamelCase  }
  # - { key: readability-identifier-naming.ClassMemberSuffix,   value: _  }
  - { key: readability-function-definition.TrailingReturnType, value: true }
